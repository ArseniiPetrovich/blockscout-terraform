apiVersion: v1
kind: Service
metadata:
  name: {BRANCH}
spec:
  type: LoadBalancer
  selector:
    app: BlockScout
    chain: {CHAIN}
    type: {TYPE}
  ports:
    - name: {TYPE}
      protocol: TCP
      port: 80
      targetPort: 4000

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {BRANCH}
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {BRANCH}
  targetCPUUtilizationPercentage: 80
  
apiVersion: v1
kind: Secret
metadata:
  name: {CONFIGMAP}
type: Opaque
data:
  DB_HOST: {DB_HOST}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {BRANCH}
  labels:
    app: BlockScout
    chain: {CHAIN}
    type: {TYPE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: BlockScout
      chain: {CHAIN}
      type: {TYPE}
  template:
    metadata:
      labels:
        app: BlockScout
        chain: {CHAIN}
        type: {TYPE}
    spec:
      initContainers:
      - name: db-migrations
        image: {IMAGE}
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              key: DB_HOST
              name: {CONFIGMAP}
        envFrom:
        - configMapRef:
            name: {CONFIGMAP}
        command: ['sh','-c','mix ecto.create && mix ecto.migrate'] 
      containers:
      - name: {TYPE}
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 5
        resources:
          requests:
            memory: "{TYPE_MEMORY}"
            cpu: "{TYPE_CPU}"
        image: {IMAGE}
        envFrom:
        - configMapRef:
            name: {CONFIGMAP}
        ports:
        - name: webport
          containerPort: 4000
